version: '3.8'

services:
  database:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-autocomplete_db}
      POSTGRES_USER: ${POSTGRES_USER:-autocomplete_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-autocomplete_pass}
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-autocomplete_user} -d ${POSTGRES_DB:-autocomplete_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT:-4000}:4000"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-autocomplete_user}:${POSTGRES_PASSWORD:-autocomplete_pass}@database:5432/${POSTGRES_DB:-autocomplete_db}
      NODE_ENV: development
      PORT: 4000
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      REACT_APP_GRAPHQL_URL: http://backend:4000/graphql
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 